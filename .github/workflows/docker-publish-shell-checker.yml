name: Docker Build Shell Checker CI

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches: [main]
    tags:
  release:
    types: [published]

env:
  # Specify which image to build
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/inline-shell-check

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ env.DOCKER_IMAGE }}:latest
          labels: |
           org.opencontainers.image.source=${{ github.event.repository.clone_url }}
           org.opencontainers.image.created=$(git log -1 --format=%cd --date=iso-strict)
           org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push latest image
        # Build and push because of multi platform build
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          sbom: false
          tags: ${{ env.DOCKER_IMAGE }}:latest
          labels: |
           org.opencontainers.image.source=${{ github.event.repository.clone_url }}
           org.opencontainers.image.created=$(git log -1 --format=%cd --date=iso-strict)
           org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64

      - name: Push release image
        # Build and push because of multi platform build
        if: startsWith(github.event.release.tag_name, 'v')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          sbom: false
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.event.release.tag_name }}
          labels: |
           org.opencontainers.image.source=${{ github.event.repository.clone_url }}
           org.opencontainers.image.created=$(git log -1 --format=%cd --date=iso-strict)
           org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64
